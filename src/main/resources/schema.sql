CREATE DATABASE IF NOT EXISTS apk_scanner;
USE apk_scanner;

CREATE TABLE IF NOT EXISTS plan (
  id BIGINT AUTO_INCREMENT PRIMARY KEY,
  file_path VARCHAR(255) NOT NULL COMMENT 'APK file path',
  sign_id BIGINT COMMENT 'Signature config ID',
  oss_id BIGINT COMMENT 'OSS config ID',
  config_ini TEXT COMMENT 'Task configuration in INI format',
  status VARCHAR(20) NOT NULL DEFAULT 'PENDING' COMMENT 'Task status: PENDING, PROCESSING, COMPLETED, FAILED',
  result_url VARCHAR(255) COMMENT 'Result file download URL',
  created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS signature_config (
  id BIGINT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(100) NOT NULL COMMENT 'Signature name',
  keystore_path VARCHAR(255) NOT NULL COMMENT 'Path to keystore file',
  alias VARCHAR(100) NOT NULL COMMENT 'Keystore alias',
  password VARCHAR(100) NOT NULL COMMENT 'Keystore password',
  key_password VARCHAR(100) NOT NULL COMMENT 'Key password',
  enabled TINYINT(1) NOT NULL DEFAULT 1 COMMENT 'Whether this config is enabled',
  created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS oss_config (
  id BIGINT AUTO_INCREMENT PRIMARY KEY,
  type VARCHAR(20) NOT NULL COMMENT 'Storage type: OSS, COS, OBS',
  bucket_name VARCHAR(100) NOT NULL COMMENT 'Bucket name',
  endpoint VARCHAR(255) NOT NULL COMMENT 'Service endpoint URL',
  access_key VARCHAR(100) NOT NULL COMMENT 'Access key ID',
  secret_key VARCHAR(100) NOT NULL COMMENT 'Secret access key',
  created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
